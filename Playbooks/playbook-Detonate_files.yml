id: Detonate files
version: -1
name: Detonate files
system: true
fromversion: 2.5.0
description: Detonate files found under File context if they are PDFs or executables
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 089f0d6b-2af7-4990-8013-ba815b38bca8
    type: start
    task:
      id: 089f0d6b-2af7-4990-8013-ba815b38bca8
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    view: |-
      {
        "position": {
          "x": 265,
          "y": -126
        }
      }
  "1":
    id: "1"
    taskid: 5bbe4786-d995-40bd-8445-db8b9517c2f2
    type: condition
    task:
      id: 5bbe4786-d995-40bd-8445-db8b9517c2f2
      version: -1
      name: Do we have relevant files?
      description: Check if the type or info of files is either executable or pdf
      scriptName: Exists
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "3"
      "yes":
      - "4"
    scriptarguments:
      value: ${File(['exe', 'pe32', 'pe64', 'pdf'].filter(function(t) {return val.Info.toLowerCase().indexOf(t)
        >= 0 || val.Type.toLowerCase().indexOf(t) >= 0;}).length > 0)}
    view: |-
      {
        "position": {
          "x": 265,
          "y": 195
        }
      }
  "3":
    id: "3"
    taskid: 77b32f7e-005d-478f-88f7-cc686a89a711
    type: regular
    task:
      id: 77b32f7e-005d-478f-88f7-cc686a89a711
      version: -1
      name: Print that there are no relevant files to detonate
      scriptName: Print
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      value: There are no relevant files to detonate
    view: |-
      {
        "position": {
          "x": 50,
          "y": 370
        }
      }
  "4":
    id: "4"
    taskid: ab4f7c4b-4afe-4d19-8156-7da0508cefd4
    type: regular
    task:
      id: ab4f7c4b-4afe-4d19-8156-7da0508cefd4
      version: -1
      name: DetonateFile (WildFire)
      description: Detonate the file in WildFire.
      script: WildFire|||detonate-file
      type: regular
      iscommand: true
      brand: WildFire
    scriptarguments:
      delay: ""
      entryID: ${File(['exe', 'pe32', 'pe64', 'pdf'].filter(function(t) {return val.Info.toLowerCase().indexOf(t)
        >= 0 || val.Type.toLowerCase().indexOf(t) >= 0;}).length > 0).EntryID}
      format: ""
      hash: ""
      interval: ""
      md5: ""
      timeout: ""
      upload: ${File(['exe', 'pe32', 'pe64', 'pdf'].filter(function(t) {return val.Info.toLowerCase().indexOf(t)
        >= 0 || val.Type.toLowerCase().indexOf(t) >= 0;}).length > 0).EntryID}
      verbose: ""
    view: |-
      {
        "position": {
          "x": 480,
          "y": 370
        }
      }
  "5":
    id: "5"
    taskid: f47ddd4c-20b8-4803-8521-ba5134aa0375
    type: condition
    task:
      id: f47ddd4c-20b8-4803-8521-ba5134aa0375
      version: -1
      name: Is WildFire enabled?
      description: Check if a given value exists in the context. Will return 'no'
        for empty empty arrays. To be used mostly with DQ and selectors.
      scriptName: Exists
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      "yes":
      - "1"
    scriptarguments:
      value: ${modules(val.brand == 'WildFire' && val.state == 'active')}
    view: |-
      {
        "position": {
          "x": 265,
          "y": 28
        }
      }
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 591,
        "width": 810,
        "x": 50,
        "y": -126
      }
    }
  }
inputs: []
outputs: []
releaseNotes: "Detonating files using the new command for it in WildFire"