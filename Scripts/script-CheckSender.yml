commonfields:
  id: CheckSender
  version: -1
name: CheckSender
script: |-
  import re
  email = ''
  if 'email' in demisto.args():
      email = demisto.args()['email']
  else:
      fullmail = demisto.get(demisto.args(), 'fullmail')
      if fullmail:          
          sender = re.search(r".*From\w*:.*\b([A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,})\b", fullmail, re.I)
          if sender:
              email = sender.group(1)
  if email:
      demisto.results(demisto.executeCommand('pipl-search', {'email': email}))
  else:
      demisto.results('Could not find the sender data')
type: python
tags:
- server
- phishing
comment: For phishing incidents, check the sender of the email via Pipl search
system: true
args:
- name: email
  default: true
  description: Email address to look up. If omitted, will instead extract with regular
    expression from the fullmail argument, where the phishing email should be provided.
- name: fullmail
  description: Raw email text to regex the sender from
scripttarget: 0
dependson:
  must:
  - pipl-search
timeout: 0s
