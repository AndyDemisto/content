commonfields:
  id: ContextGetIps
  version: -1
name: ContextGetIps
script: |+
  if (args.subnets)
      var subnets = args.subnets.split(',');
  var flat = {};
  var res = [];
  var re = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;

  flattenFields(invContext,undefined,flat);
  keysArr = Object.keys(flat);
  for (i = 0; i < keysArr.length; i++) {
      if (re.test(flat[keysArr[i]]) && res.indexOf(flat[keysArr[i]]) == -1) {
          if (subnets) {
              if (subnets.indexOf(flat[keysArr[i]]) == -1) {
                  res.push(flat[keysArr[i]]);
              }
          } else {
              res.push(flat[keysArr[i]]);
          }
      }
  }

  var md = '### IP addresses in context\n';
  for (var i = 0; i<res.length; i++) {
      md += '- ' + res[i] + '\n';
  }
  return {
          Type: entryTypes.note,
          Contents: res,
          ContentsFormat: formats.json,
          HumanReadable: md
          };

type: javascript
tags: []
comment: Gets all IP addresses in context, excluding ones given.
enabled: true
args:
- name: subnets
  description: IP addresses to exclude (separated by commas)
scripttarget: 0
