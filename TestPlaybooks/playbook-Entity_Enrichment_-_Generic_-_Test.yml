id: entity_enrichment_generic_test
version: -1
fromversion: 3.5.0
name: Entity Enrichment - Generic - Test
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 8a535e70-6f01-4233-89bb-5a7dbf3b3308
    type: start
    task:
      id: 8a535e70-6f01-4233-89bb-5a7dbf3b3308
      version: -1
      name: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "1"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 50
        }
      }
  "1":
    id: "1"
    taskid: 9297e0a8-2ef7-4df2-8d14-c0b271dad2ca
    type: regular
    task:
      id: 9297e0a8-2ef7-4df2-8d14-c0b271dad2ca
      version: -1
      name: Clear Context
      description: Delete field from context
      scriptName: DeleteContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      all:
        simple: "yes"
      key: {}
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 187
        }
      }
  "2":
    id: "2"
    taskid: c2d8289a-4510-4cb5-8a43-3a6d8fa8d106
    type: regular
    task:
      id: c2d8289a-4510-4cb5-8a43-3a6d8fa8d106
      version: -1
      name: Set IP
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "5"
    scriptarguments:
      append: {}
      key:
        simple: Test.Address
      value:
        simple: 1.2.3.4
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 354
        }
      }
  "5":
    id: "5"
    taskid: 643ddb12-30ef-4f59-80ac-6737ca5502dd
    type: regular
    task:
      id: 643ddb12-30ef-4f59-80ac-6737ca5502dd
      version: -1
      name: Set Account
      description: Sets a value into the context with the given context key
      scriptName: Set
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "11"
    scriptarguments:
      append: {}
      key:
        simple: Test.Username
      value:
        simple: admin
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 450,
          "y": 514
        }
      }
  "8":
    id: "8"
    taskid: 8b49d3a2-fc4a-46cb-8b34-489afac3b7b0
    type: regular
    task:
      id: 8b49d3a2-fc4a-46cb-8b34-489afac3b7b0
      version: -1
      name: Verify IP Object
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: IP
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 721,
          "y": 858
        }
      }
  "9":
    id: "9"
    taskid: 68349f3c-0e15-4ede-8adb-4c18249a82fc
    type: regular
    task:
      id: 68349f3c-0e15-4ede-8adb-4c18249a82fc
      version: -1
      name: Verify DBotScore
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    scriptarguments:
      expectedValue: {}
      fields:
        simple: Indicator, Score, Type, Vendor
      path:
        simple: DBotScore
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 465,
          "y": 1077
        }
      }
  "10":
    id: "10"
    taskid: 963e0eea-9f48-4424-8b67-a0907a909637
    type: regular
    task:
      id: 963e0eea-9f48-4424-8b67-a0907a909637
      version: -1
      name: Verify Account fields
      description: |-
        Verifies path in context:
        - Verifies path existence
        - If matching object is an array: verify fields exists in each of the objects in the array
        - If matching object is not an array: verify fields exists in matching object
        - if 'expectedValue' is given: ensure that the given value is equal to the context path
      scriptName: VerifyContext
      type: regular
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    scriptarguments:
      expectedValue: {}
      fields:
        simple: Type,ID
      path:
        simple: Account
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 248,
          "y": 860
        }
      }
  "11":
    id: "11"
    taskid: be9c041a-ac2f-4d4a-8333-1e6e935e5364
    type: playbook
    task:
      id: be9c041a-ac2f-4d4a-8333-1e6e935e5364
      version: -1
      name: Entity Enrichment - Generic
      description: Enrich entities using one or more integrations
      playbookName: Entity Enrichment - Generic
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "10"
      - "8"
    scriptarguments:
      Domain:
        simple: ${Domain.Name}
      Email:
        simple: ${Account.Email.Address}
      Hostname:
        simple: ${Endpoint.Hostname}
      IP:
        simple: ${Test.Address}
      InternalRange: {}
      MD5:
        simple: ${File.MD5}
      SHA1:
        simple: ${File.SHA1}
      SHA256:
        simple: ${File.SHA256}
      Username:
        simple: ${Test.Username}
      url:
        simple: ${URL.Data}
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 450,
          "y": 692
        }
      }
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1122,
        "width": 853,
        "x": 248,
        "y": 50
      }
    }
  }
inputs: []
outputs: []
releaseNotes: "-"